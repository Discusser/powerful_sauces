architectury {
    common rootProject.enabled_platforms.split(',')
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury:$rootProject.architectury_api_version"
}

sourceSets.main {
    resources {
        srcDir("src/generated/resources")
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    source(sourceSets.main.allSource)
    doLast {
//        def forgeBuild = project(":forge").file("build")
//        copy {
//            from "${forgeBuild}/resources/main/dependents/platform"
//            include "**/**/*.json"
//            expand "dependent": "forge"
//            into "${forgeBuild}/resources/main/data/forge/"
//        }
//        def fabricBuild = project(":fabric").file("build")
//        println("FABRIC BUILD")
//        println(fabricBuild)
//        copy {
//            from "${fabricBuild}/resources/main/dependents/platform"
//            include "**/**/*.json"
//            expand "dependent": "c"
//            into "${fabricBuild}/resources/main/data/c/"
//        }
    }
}
